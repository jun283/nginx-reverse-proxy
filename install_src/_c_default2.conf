#include mime.types;
#default_type "text/html";
charset utf-8;
log_format main  '$http_host{S;}$remote_addr{S;}$remote_user{S;}$time_local{S;}$request{S;}$status{S;}$body_bytes_sent{S;}$bytes_sent{S;}$http_referer{S;}$http_user_agent{S;}$http_x_forwarded_for{S;}$upstream_addr{S;}$upstream_status{S;}$upstream_response_time{S;}$request_time{S;}$connection{S;}$connection_requests{S;}$request_length{S;}$msec{S;}$geoip_country_code{S;}$geoip_city{S;}$scheme{S;}$ssl_protocol{S;}$ssl_cipher{S;}$content_length{S;}$request_completion{S;}$request_method{S;}$limit_rate{S;}$server_protocol{S;}$upstream_cache_status{S;}$http_host{S;}$sent_http_keep_alive{S;}$sent_http_cache_control{S;}$sent_http_content_type{S;}$sent_http_last_modified{S;}$nginx_version{S;}$remote_port{S;}$tcpinfo_rtt{S;}$tcpinfo_rttvar{S;}$tcpinfo_snd_cwnd{S;}$tcpinfo_rcv_space{S;}@@@HOSTNAME@@@{S;}$https{S;}Toffstech';
access_log logs/access.log main buffer=4k flush=10s;
open_log_file_cache max=1024 inactive=10s valid=10s min_uses=1;
#access_log syslog:server=syslog.toffstech.com:12301,facility=local5,tag=nginx_access,severity=info main;
#error_log syslog:server=syslog.toffstech.com:12302,facility=local6,tag=nginx_error,severity=debug debug;

etag on;
sendfile on;
tcp_nopush on;
tcp_nodelay on;
#keepalive_timeout 120s 120;
#keepalive_requests 256;
server_names_hash_bucket_size 4096;
server_names_hash_max_size 4096;
#client_header_buffer_size 128k;
#large_client_header_buffers 32 128k;
client_max_body_size 32m;
#client_header_timeout 5m;
connection_pool_size 4096;

fastcgi_connect_timeout 5m;
fastcgi_send_timeout 5m;
fastcgi_read_timeout 5m;
fastcgi_buffer_size 128k;
fastcgi_buffers 4 128k;
fastcgi_busy_buffers_size 256k;
fastcgi_temp_file_write_size 256k;

resolver 8.8.8.8 114.114.114.114 223.5.5.5;
resolver_timeout 120s;

#gzip on;
#gzip_min_length 1024;
#gzip_buffers 16 8k;
#gzip_comp_level 9;
#gzip_types text/xml text/plain text/javascript text/css application/x-javascript application/javascript application/xml application/font-woff application/json application/pdf application/octet-stream #application/vnd.ms-excel application/vnd.ms-fontobject application/vnd.ms-powerpoint application/msword application/rtf application/xhtml+xml image/svg+xml image/png image/x-icon image/gif image/jpeg #audio/mpeg audio/ogg video/3gpp video/mp4 video/mpeg;
#gzip_vary on;

#proxy_temp_path /home/nginxproxytemp;
#proxy_cache_path /home/nginxproxycache levels=1:2 keys_zone=NGINX_CACHE_CONTENT:64m inactive=1h max_size=8G;
#client_body_temp_path /mnt/sdb/ALSvrMrg/SoftProgram/nginx/client_body_temp/PAHT_NAME 1 2;

#limit_req_zone $binary_remote_addr zone=R120R_ZONE:128m rate=120r/s;
#limit_req_zone $binary_remote_addr zone=R240R_ZONE:128m rate=240r/s;
#limit_conn_zone $binary_remote_addr zone=ADDR_ZONE1:128m;
#limit_conn_zone $binary_remote_addr zone=ADDR_ZONE2:128m;

map $http_upgrade $connection_upgrade
{
	default upgrade;
	'' close;
}

######from Best Performance ref: https://gist.github.com/denji/8359866
# cache informations about FDs, frequently accessed files
# can boost performance, but you need to test those values
open_file_cache max=200000 inactive=20s; 
open_file_cache_valid 30s; 
open_file_cache_min_uses 2;
open_file_cache_errors on;

# to boost I/O on HDD we can disable access logs
access_log off;

# reduce the data that needs to be sent over network
gzip on;
gzip_min_length 10240;
gzip_proxied expired no-cache no-store private auth;
#gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/json application/xml;
gzip_disable msie6;
gzip_types text/xml text/plain text/javascript text/css application/x-javascript application/javascript application/xml application/font-woff application/json application/pdf application/octet-stream application/vnd.ms-excel application/vnd.ms-fontobject application/vnd.ms-powerpoint application/msword application/rtf application/xhtml+xml image/svg+xml image/png image/x-icon image/gif image/jpeg audio/mpeg audio/ogg video/3gpp video/mp4 video/mpeg;
gzip_vary on;


# allow the server to close connection on non responding client, this will free up memory
reset_timedout_connection on;

# request timed out -- default 60
client_body_timeout 10;

# if client stop responding, free up memory -- default 60
send_timeout 2;

#To enable keepalive connections to upstream servers you must also include the following directives in the configuration:
proxy_http_version 1.1;
proxy_set_header Connection "";

# server will close connection after this time -- default 75
keepalive_timeout 30;

# number of requests client can make over keep-alive -- for testing environment
keepalive_requests 100000;

# limit the number of connections per single IP
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

# limit the number of requests for a given session
limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=5r/s;

# zone which we want to limit by upper values, we want limit whole server
server {
    limit_conn conn_limit_per_ip 10;
    limit_req zone=req_limit_per_ip burst=10 nodelay;
}

# if the request body size is more than the buffer size, then the entire (or partial)
# request body is written into a temporary file
client_body_buffer_size  128k;

# headerbuffer size for the request header from client -- for testing environment
client_header_buffer_size 3m;

# maximum number and size of buffers for large headers to read from client request
large_client_header_buffers 4 256k;

# read timeout for the request body from client -- for testing environment
#client_body_timeout   3m;

# how long to wait for the client to send a request header -- for testing environment
client_header_timeout 3m;




